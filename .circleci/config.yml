# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
# make sure the circle project key is a read/write key (on circleCI project settings -> key -> add user key)
# .goreleaser.yml needed next to the main function
# svu is tool that automatically generate tags https://github.com/caarlos0/svu
# doc: https://goreleaser.com/quick-start/

version: 2.1
orbs:
  snyk: snyk/snyk@0.0.8
jobs:
  build-test-monitor:
      docker:
        # specify the version
        - image: circleci/golang:1.13

      steps:
        - checkout
        - run: go test -v
        - snyk/scan:
            fail-on-issues: true
            monitor-on-build: true
            token-variable: SNYK_TOKEN
        - run: ./generate-binaries.sh
        - persist_to_workspace:
            root: .
            paths:
              - dist/*

  build-test:
      docker:
        # specify the version
        - image: circleci/golang:1.13

      steps:
        - checkout
        - run: go test -v
        - snyk/scan:
            fail-on-issues: true
            monitor-on-build: false
            token-variable: SNYK_TOKEN

  build-test-from-fork:
      docker:
        # specify the version
        - image: circleci/golang:1.13

      steps:
        - checkout
        - run: go test -v

  publish-github-release:
    docker:
      - image: gcr.io/snyk-technical-services/cicd-github
        auth:
          username: _json_key
          password: $GCLOUD_GCR_SNYK_TS_READER
    steps:
      - checkout
      - run: go build
      - run: echo 'deb [trusted=yes] https://apt.fury.io/caarlos0/ /' | sudo tee /etc/apt/sources.list.d/caarlos0.list
      - run: sudo apt update
      - run: sudo apt install svu 
      - run: git tag "$(svu next)"
      - run: git push --tags
      - run: echo 'deb [trusted=yes] https://repo.goreleaser.com/apt/ /' | sudo tee /etc/apt/sources.list.d/goreleaser.list
      - run: sudo apt update
      - run: rm simpleGoProject
      - run: rm -rf /dist
      - run: sudo apt install goreleaser
      - run: goreleaser --rm-dist 

workflows:
  version: 2.1
  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - build-test-monitor
  build-test-monitor-publish:
    jobs:
      - build-test-monitor:
          filters:
            branches:
              only:
                  - master
      - publish-github-release:
          requires:
            - build-test-monitor
          filters:
            branches:
              only:
                - master
  build-test:
      jobs:
        - build-test:
            filters:
              branches:
                ignore:
                  - master
                  - /pull\/[0-9]+/
        - build-test-from-fork:
            filters:
              branches:
                only:
                  - /pull\/[0-9]+/
